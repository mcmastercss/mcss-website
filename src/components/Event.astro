---
import { Icon } from "astro-icon";
import { capString } from "../utils/globalFunctions";

const { eventName, dateStart, dateEnd, location, locationurl } = Astro.props;

const dateStartObject = new Date(dateStart);
const dateEndObject = new Date(dateEnd);
let formattedStartDate = null;
let formattedEndDate = null;

if (dateStartObject.toDateString() == dateEndObject.toDateString()) {
  formattedStartDate = dateStartObject.toLocaleDateString("en-US", {
    month: "short",
    day: "numeric",
    hour: "numeric",
    minute: "numeric",
  });
  formattedEndDate = dateEndObject.toLocaleTimeString("en-US", {
    hour: "2-digit",
    minute: "2-digit",
  });
} else {
  formattedStartDate = dateStartObject.toLocaleDateString("en-US", {
    month: "short",
    day: "numeric",
    hour: "numeric",
    minute: "numeric",
  });
  formattedEndDate = dateEndObject.toLocaleDateString("en-US", {
    month: "short",
    day: "numeric",
    hour: "numeric",
    minute: "numeric",
  });
}

console.log(dateEnd);
---

<div
  class="bg-white text-blue-700 border-[8px] lg:border-[12px] border-blue-400 py-4 lg:py-6 px-6 rounded-3xl shadow-lg flex-initial z-10"
>
  <h1 class="font-medium text-xl lg:text-xl pb-3">Sign up</h1>
  <h1 class="font-black text-2xl lg:text-3xl pb-3 w-9/12 break-words mb-1">
    {capString(eventName, 40)}
  </h1>
  <div class="flex flex-col gap-2">
    <div class="flex gap-2 lg:gap-4">
      {
        dateStart !== null && dateEnd !== null && (
          <>
            <Icon
              pack="mdi"
              name="clock-time-four-outline"
              color="#1d4ed8"
              width="29"
            />
            <h3 class="text-lg font-semibold">
              {formattedStartDate} - {formattedEndDate}
            </h3>
          </>
        )
      }
      {
        dateStart !== null && dateEnd === null && (
          <>
            <Icon
              pack="mdi"
              name="clock-time-four-outline"
              color="#1d4ed8"
              width="29"
            />
            <h3 class="text-lg font-semibold">{formattedStartDate}</h3>
          </>
        )
      }
    </div>
    <div class="flex gap-2 lg:gap-4">
      {
        locationurl !== undefined && location !== "" && (
          <>
            <Icon pack="ic" name="outline-place" color="#1d4ed8" width="30" />
            <a href={locationurl} target="_blank">
              <h3 class="pb-5 text-lg font-semibold underline hover:text-blue-400">
                {location}
              </h3>
            </a>
          </>
        )
      }
      {
        locationurl !== undefined && location === "" && (
          <>
            <Icon pack="ic" name="outline-place" color="#1d4ed8" width="30" />
            <a href={locationurl} target="_blank">
              <h3 class="pb-5 text-lg font-semibold underline hover:text-blue-400">
                {locationurl}
              </h3>
            </a>
          </>
        )
      }
      {
        locationurl === undefined && location !== "" && (
          <>
            <Icon pack="ic" name="outline-place" color="#1d4ed8" width="30" />
            <h3 class="text-lg font-semibold">{location}</h3>
          </>
        )
      }
    </div>
  </div>

  <button
    class="btn btn-md mt-2 lg:mt-5 bg-blue-700 hover:bg-blue-800 w-full rounded-md font-semibold text-base lg:text-xl text-white"
    >RSVP</button
  >
</div>
