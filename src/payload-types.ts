/* tslint:disable */
/**
 * This file was automatically generated by Payload CMS.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    categories: Category;
    posts: Post;
    tags: Tag;
    users: User;
    pfps: Pfp;
    thumbnails: Thumbnail;
  };
  globals: {};
}
export interface Category {
  id: string;
  name: string; // "News" or "Event"
}
export interface Post {
  id: string;
  thumbnail?: string | Thumbnail;
  title: string;
  summary: string;
  slug?: string;
  author: string | User;
  publishedDate: string;
  category: string | Category;
  tags?: string[] | Tag[];
  eventStartTime?: string;
  eventEndTime?: string;
  eventLocation?: string;
  eventLocationURL?: string;
  content?: {
    [k: string]: unknown;
  }[];
  status?: "draft" | "published";
  createdAt: string;
  updatedAt: string;
}
export interface Thumbnail {
  id: string;
  slug?: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
  sizes: {
    thumbnail: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
  };
  createdAt: string;
  updatedAt: string;
}
export interface User {
  id: string;
  pfp?: string | Pfp;
  name: string;
  email?: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  loginAttempts?: number;
  lockUntil?: string;
  createdAt: string;
  updatedAt: string;
  password?: string;
}
export interface Pfp {
  id: string;
  slug?: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
  sizes: {
    pfp: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
  };
  createdAt: string;
  updatedAt: string;
}
export interface Tag {
  id: string;
  name: string;
}
