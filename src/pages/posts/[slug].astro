---
import RichText from "../../components/RichText.astro";
import Layout from "../../layouts/Layout.astro";
import PostHeader from "../../components/PostHeader.astro";
import PostFooter from "../../components/PostFooter.astro";

import { getPosts } from "../../api";
import type { Post, User, Thumbnail, Pfp } from "../../payload-types";
import type { FormattedElement, FormattedText } from "../../rich-text-export";

// Assets
import placeholderThumbnail from "../../assets/images/default.jpg";
import placeholderPfp from "../../assets/team/placeholder.jpg";

export async function getStaticPaths() {
    const posts = await getPosts();
    // console.log(posts);
    const paths = posts.docs.map((post) => {
        return {
            params: { slug: post.slug },
            props: { post },
        };
    });
    return paths;
}

export interface Props {
    post: Post;
    params: string | undefined;
}

const { post } = Astro.props;

// if image url doesn't exist give it the placeholder image
const imageOrDefault = (obj: string | Post | User, placeholder: string) => {
    if (typeof obj === "string") {
        return obj;

        // Get thumbnail
    } else if ("thumbnail" in obj) {
        const thumbnail = obj.thumbnail as Thumbnail;
        return thumbnail?.url ?? placeholder;
        // get pfp
    } else if ("pfp" in obj) {
        const pfp = obj.pfp as Pfp;
        return pfp?.url ?? placeholder;
    }

    // default to placeholder
    return placeholder;
};

const thumbnail = imageOrDefault(post, placeholderThumbnail.src);
const pfp = imageOrDefault(post.author, placeholderPfp.src);
const content = post.content as (FormattedElement | FormattedText)[];
const category =
    typeof post.category === "string" ? post.category : post.category.name;
const author = post.author as User;
---

<Layout title={post.title || ""}>
    <PostHeader />
    <main class="p-6 max-w-3xl m-auto">
        <h2 class="text-blue-600 font-bold text-xl pb-2">{category}</h2>
        <h1 class="text-3xl font-extrabold text-black pb-6">{post.title}</h1>
        <div class="flex items-center">
            <img class="w-12 h-12 rounded-full mr-4" src={pfp} alt="" />
            <div class="flex flex-col">
                <h4 class="font-bold">{author.name}</h4>
                <h5 class="">{author.email}</h5>
            </div>
            <div class="ml-auto">
                <h5 class="">{post.publishedDate}</h5>
            </div>
        </div>

        <img src={thumbnail} alt="" srcset="" />
        {post.content && <RichText richText={content} />}
    </main>
    <PostFooter />
</Layout>
